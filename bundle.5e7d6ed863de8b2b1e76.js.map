{"version":3,"sources":["webpack:///bundle.5e7d6ed863de8b2b1e76.js","webpack:///webpack/bootstrap 5e7d6ed863de8b2b1e76","webpack:///./src/js/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","svg","d3","select","classed","metricWeight","this","gram","kilogram","tonne","water","append","land","locations","format","mass","concat","tip","attr","offset","html","year","classification","queue","defer","json","await","error","world","_ref","data","features","countries","topojson","feature","objects","meteorites","map","_ref2","point","geometry","_ref2$properties","properties","recclass","Number","Date","getFullYear","radiusValue","radiusScale","scaleSqrt","range","domain","max","forEach","radius","projection","geoOrthographic","geoPath","render","datum","type","coordinates","k","Math","sqrt","scale","circles","selectAll","filter","enter","merge","on","show","hide","exit","remove","rotate0","coordinates0","rotate","invert","event","x","y","initialScale","drag","coordinates1","zoom","transform"],"mappings":"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","file":"bundle.5e7d6ed863de8b2b1e76.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(2);\n\n/* eslint-disable no-param-reassign */\nvar svg = d3.select(\"main svg\").classed(\"map\", true);\nvar metricWeight = new function metricWeight() {\n  this.gram = 1;\n  this.kilogram = this.gram * 1000;\n  this.tonne = this.kilogram * 1000;\n}(); // Order is important (water before land)\n\nvar water = svg.append(\"path\");\nvar land = svg.append(\"path\");\nvar locations = svg.append(\"g\");\n\nvar format = function format(mass) {\n  if (mass >= metricWeight.tonne) {\n    return \"\".concat(mass / metricWeight.tonne, \" Tonnes\");\n  } else if (mass >= metricWeight.kilogram) {\n    return \"\".concat(mass / metricWeight.kilogram, \" Kilograms\");\n  }\n\n  return \"\".concat(mass, \" Grams\");\n};\n\nvar tip = d3.tip().attr(\"class\", \"d3-tip\").offset([-10, 0]).html(function (d) {\n  return \"\".concat(d.name, \" (\").concat(d.year, \"): \").concat(format(d.mass), \" (\").concat(d.classification, \")\");\n});\nsvg.call(tip);\nd3.queue().defer(d3.json, \"https://unpkg.com/world-atlas@1/world/110m.json\").defer(d3.json, \"https://cdn.rawgit.com/FreeCodeCamp/ProjectReferenceData/master/meteorite-strike-data.json\").await(function (error, world, _ref) {\n  var data = _ref.features;\n  var countries = topojson.feature(world, world.objects.countries);\n  var meteorites = data.map(function (_ref2) {\n    var point = _ref2.geometry,\n        _ref2$properties = _ref2.properties,\n        name = _ref2$properties.name,\n        recclass = _ref2$properties.recclass,\n        year = _ref2$properties.year,\n        mass = _ref2$properties.mass;\n    return {\n      name: name,\n      point: point,\n      mass: Number(mass),\n      classification: recclass,\n      year: new Date(year).getFullYear()\n    };\n  });\n\n  var radiusValue = function radiusValue(d) {\n    return d.mass;\n  };\n\n  var radiusScale = d3.scaleSqrt().range([0, 20]);\n  radiusScale.domain([0, d3.max(meteorites, radiusValue)]);\n  meteorites.forEach(function (d) {\n    d.radius = radiusScale(radiusValue(d));\n  });\n  var projection = d3.geoOrthographic();\n  var geoPath = d3.geoPath().projection(projection);\n\n  var render = function render() {\n    water.datum({\n      type: \"Sphere\"\n    }).attr(\"class\", \"water\").attr(\"d\", geoPath);\n    land.attr(\"class\", \"land\").attr(\"d\", geoPath(countries));\n    meteorites.forEach(function (d) {\n      var point = d.point;\n      d.projection = geoPath(point) ? projection(point.coordinates) : null;\n    });\n    var radiusCoefficient = 200;\n    var k = Math.sqrt(projection.scale() / radiusCoefficient);\n    var circles = locations.selectAll(\"circle\").data(meteorites.filter(function (d) {\n      return d.projection;\n    }));\n    circles.enter().append(\"circle\").classed(\"location\", true).merge(circles).attr(\"cx\", function (d) {\n      return d.projection[0];\n    }).attr(\"cy\", function (d) {\n      return d.projection[1];\n    }).attr(\"r\", function (d) {\n      return d.radius * k;\n    }).on(\"mouseover\", tip.show).on(\"mouseout\", tip.hide);\n    circles.exit().remove();\n  };\n\n  render();\n  var rotate0;\n  var coordinates0;\n\n  var coordinates = function coordinates() {\n    return projection.rotate(rotate0).invert([d3.event.x, d3.event.y]);\n  };\n\n  var initialScale = projection.scale();\n  svg.call(d3.drag().on(\"start\", function () {\n    rotate0 = projection.rotate();\n    coordinates0 = coordinates();\n  }).on(\"drag\", function () {\n    var coordinates1 = coordinates();\n    projection.rotate([rotate0[0] + coordinates1[0] - coordinates0[0], rotate0[1] + coordinates1[1] - coordinates0[1]]);\n    render();\n  }).on(\"end\", function () {\n    render();\n  })).call(d3.zoom().on(\"zoom\", function () {\n    projection.scale(initialScale * d3.event.transform.k);\n    render();\n  }).on(\"end\", function () {\n    render();\n  }));\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.5e7d6ed863de8b2b1e76.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5e7d6ed863de8b2b1e76","/* eslint-disable no-param-reassign */\nimport \"../css/index.css\";\n\nconst svg = d3.select(\"main svg\").classed(\"map\", true);\n\nconst metricWeight = new function metricWeight() {\n    this.gram = 1;\n    this.kilogram = this.gram * 1000;\n    this.tonne = this.kilogram * 1000;\n}();\n\n// Order is important (water before land)\nconst water = svg.append(\"path\");\nconst land = svg.append(\"path\");\nconst locations = svg.append(\"g\");\n\nconst format = mass => {\n    if (mass >= metricWeight.tonne) {\n        return `${mass / metricWeight.tonne} Tonnes`;\n    } else if (mass >= metricWeight.kilogram) {\n        return `${mass / metricWeight.kilogram} Kilograms`;\n    }\n    return `${mass} Grams`;\n};\n\nconst tip = d3\n    .tip()\n    .attr(\"class\", \"d3-tip\")\n    .offset([-10, 0])\n    .html(d => `${d.name} (${d.year}): ${format(d.mass)} (${d.classification})`);\nsvg.call(tip);\n\nd3\n    .queue()\n    .defer(d3.json, \"https://unpkg.com/world-atlas@1/world/110m.json\")\n    .defer(d3.json, \"https://cdn.rawgit.com/FreeCodeCamp/ProjectReferenceData/master/meteorite-strike-data.json\")\n    .await((error, world, { features: data }) => {\n        const countries = topojson.feature(world, world.objects.countries);\n\n        const meteorites = data.map(({ geometry: point, properties: { name, recclass, year, mass } }) => ({\n            name,\n            point,\n            mass: Number(mass),\n            classification: recclass,\n            year: new Date(year).getFullYear(),\n        }));\n\n        const radiusValue = d => d.mass;\n        const radiusScale = d3.scaleSqrt().range([0, 20]);\n\n        radiusScale.domain([0, d3.max(meteorites, radiusValue)]);\n\n        meteorites.forEach(d => {\n            d.radius = radiusScale(radiusValue(d));\n        });\n\n        const projection = d3.geoOrthographic();\n        const geoPath = d3.geoPath().projection(projection);\n\n        const render = () => {\n            water\n                .datum({ type: \"Sphere\" })\n                .attr(\"class\", \"water\")\n                .attr(\"d\", geoPath);\n\n            land.attr(\"class\", \"land\").attr(\"d\", geoPath(countries));\n\n            meteorites.forEach(d => {\n                const { point } = d;\n                d.projection = geoPath(point) ? projection(point.coordinates) : null;\n            });\n\n            const radiusCoefficient = 200;\n            const k = Math.sqrt(projection.scale() / radiusCoefficient);\n\n            const circles = locations.selectAll(\"circle\").data(meteorites.filter(d => d.projection));\n\n            circles\n                .enter()\n                .append(\"circle\")\n                .classed(\"location\", true)\n                .merge(circles)\n                .attr(\"cx\", d => d.projection[0])\n                .attr(\"cy\", d => d.projection[1])\n                .attr(\"r\", d => d.radius * k)\n                .on(\"mouseover\", tip.show)\n                .on(\"mouseout\", tip.hide);\n            circles.exit().remove();\n        };\n        render();\n\n        let rotate0;\n        let coordinates0;\n\n        const coordinates = () => projection.rotate(rotate0).invert([d3.event.x, d3.event.y]);\n\n        const initialScale = projection.scale();\n\n        svg\n            .call(\n                d3\n                    .drag()\n                    .on(\"start\", () => {\n                        rotate0 = projection.rotate();\n                        coordinates0 = coordinates();\n                    })\n                    .on(\"drag\", () => {\n                        const coordinates1 = coordinates();\n                        projection.rotate([\n                            rotate0[0] + coordinates1[0] - coordinates0[0],\n                            rotate0[1] + coordinates1[1] - coordinates0[1],\n                        ]);\n                        render();\n                    })\n                    .on(\"end\", () => {\n                        render();\n                    })\n            )\n            .call(\n                d3\n                    .zoom()\n                    .on(\"zoom\", () => {\n                        projection.scale(initialScale * d3.event.transform.k);\n                        render();\n                    })\n                    .on(\"end\", () => {\n                        render();\n                    })\n            );\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/index.js"],"sourceRoot":""}